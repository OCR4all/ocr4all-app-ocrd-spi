#
# OCR4all app
# ocr-d service provider messages: English
#
# Author:   Herbert Baier (herbert.baier@uni-wuerzburg.de)
# Date:     29.03.2022
#

no.command.docker=The required 'docker' command is not available.

page.xml.level.operation=Level of operation

page.xml.level.operation.page=page
page.xml.level.operation.region=region
page.xml.level.operation.line=line
page.xml.level.operation.table=table

#
# SPI preprocessing: cis ocropy binarize
#
preprocessing.cis.ocropy.binarize.name=CIS binarize
preprocessing.cis.ocropy.binarize.description=Binarize (and optionally denoise and deskew) pages / regions / lines of a page - requires Docker

preprocessing.cis.ocropy.binarize.method=Binarization method
preprocessing.cis.ocropy.binarize.method.description=binarization method to use (only 'ocropy' will include deskewing and denoising)

preprocessing.cis.ocropy.binarize.method.none=none
preprocessing.cis.ocropy.binarize.method.global=global
preprocessing.cis.ocropy.binarize.method.otsu=otsu
preprocessing.cis.ocropy.binarize.method.gaussOtsu=gauss otsu
preprocessing.cis.ocropy.binarize.method.ocropy=ocropy

preprocessing.cis.ocropy.binarize.threshold=Threshold
preprocessing.cis.ocropy.binarize.threshold.description=for the 'ocropy' and 'global' method, black/white threshold to apply on the whitelevel normalized image (the larger the more/heavier foreground)

preprocessing.cis.ocropy.binarize.grayscale=Grayscale
preprocessing.cis.ocropy.binarize.grayscale.description=for the 'ocropy' method, produce grayscale-normalized instead of thresholded image

preprocessing.cis.ocropy.binarize.maximum.skewing=Maximum skewing
preprocessing.cis.ocropy.binarize.maximum.skewing.description=modulus of maximum skewing angle (in degrees) to detect (larger will be slower, 0 will deactivate deskewing)

preprocessing.cis.ocropy.binarize.noise.maximum.size=Noise maximum size
preprocessing.cis.ocropy.binarize.noise.maximum.size.description=maximum pixel number for connected components to regard as noise (0 will deactivate denoising)
    
preprocessing.cis.ocropy.binarize.level.operation.description=PAGE XML hierarchy level granularity to annotate images

#
# SPI olr: cis ocropy segment
#
olr.cis.ocropy.segment.name=CIS segment
olr.cis.ocropy.segment.description=Segment (pages or) regions of a page into (regions and) lines - requires Docker

olr.cis.ocropy.segment.dpi=DPI
olr.cis.ocropy.segment.dpi.description=pixel density in dots per inch (overrides any meta-data in the images); disabled when negative; when disabled and no meta-data is found, 300 is assumed

olr.cis.ocropy.segment.level.operation.description=PAGE XML hierarchy level to read images from and add elements to

olr.cis.ocropy.segment.maximum.column.separators=Maximum column separators
olr.cis.ocropy.segment.maximum.column.separators.description=(when operating on the page/table level) maximum number of white/background column separators to detect, counted piece-wise

olr.cis.ocropy.segment.maximum.number.column.separators=Maximum number column separators
olr.cis.ocropy.segment.maximum.number.column.separators.description=(when operating on the page/table level) number of black/foreground column separators to detect (and suppress), counted piece-wise

olr.cis.ocropy.segment.maximum.images=Maximum images
olr.cis.ocropy.segment.maximum.images.description=(when operating on the page level) maximum number of black/foreground very large components to detect (and suppress), counted piece-wise

olr.cis.ocropy.segment.minimum.height.column.separators=Minimum height column separators
olr.cis.ocropy.segment.minimum.height.column.separators.description=(when operating on the page/table level) minimum height of white/background or black/foreground column separators in multiples of scale/capheight, counted piece-wise

olr.cis.ocropy.segment.minimum.width.horizontal.separators=Minimum width horizontal separators
olr.cis.ocropy.segment.minimum.width.horizontal.separators.description=(when operating on the page/table level) minimum width of black/foreground horizontal separators in multiples of scale/capheight, counted piece-wise

olr.cis.ocropy.segment.gap.height=Gap height
olr.cis.ocropy.segment.gap.height.description=(when operating on the page/table level) largest minimum pixel average in the horizontal or vertical profiles (across the binarized image) to still be regarded as a gap during recursive X-Y cut from lines to regions; needs to be larger when more foreground noise is present, reduce to avoid mistaking text for noise

olr.cis.ocropy.segment.gap.width=Gap width
olr.cis.ocropy.segment.gap.width.description=(when operating on the page/table level) smallest width in multiples of scale/capheight of a valley in the horizontal or vertical profiles (across the binarized image) to still be regarded as a gap during recursive X-Y cut from lines to regions; needs to be smaller when more foreground noise is present, increase to avoid mistaking inter-line as paragraph gaps and inter-word as inter-column gaps

olr.cis.ocropy.segment.overwrite.order=Overwrite order
olr.cis.ocropy.segment.overwrite.order.description=(when operating on the page/table level) remove any references for existing TextRegion elements within the top (page/table) reading order; otherwise append 

olr.cis.ocropy.segment.overwrite.separators=Overwrite separators
olr.cis.ocropy.segment.overwrite.separators.description=(when operating on the page/table level) remove any existing SeparatorRegion elements; otherwise append

olr.cis.ocropy.segment.overwrite.regions=Overwrite regions
olr.cis.ocropy.segment.overwrite.regions.description=(when operating on the page/table level) remove any existing TextRegion elements; otherwise append

olr.cis.ocropy.segment.overwrite.lines=Overwrite lines
olr.cis.ocropy.segment.overwrite.lines.description=(when operating on the region level) remove any existing TextLine elements; otherwise append

olr.cis.ocropy.segment.spread=Spread
olr.cis.ocropy.segment.spread.description= distance in points (pt) from the foreground to project text line (or text region) labels into the background for polygonal contours; if zero, project half a scale/capheight

#
# SPI olr: tesserocr segment region
#
olr.tesseract.segment.region.name=Tesserocr segment region
olr.tesseract.segment.region.description=Segment page into regions with Tesseract - requires Docker

olr.tesseract.segment.region.dpi=DPI
olr.tesseract.segment.region.dpi.description=pixel density in dots per inch (overrides any meta-data in the images); disabled when negative; when disabled and no meta-data is found, 300 is assumed

olr.tesseract.segment.region.overwrite.regions=Overwrite regions
olr.tesseract.segment.region.overwrite.regions.description=Remove existing layout and text annotation below the Page level (otherwise skip page; no incremental annotation yet)

olr.tesseract.segment.region.padding=Padding
olr.tesseract.segment.region.padding.description=extend detected region rectangles by this many (true) pixels

olr.tesseract.segment.region.shrink.polygons=Shrink polygons
olr.tesseract.segment.region.shrink.polygons.description=annotate polygon coordinates instead of bounding box rectangles by projecting the convex hull of all symbols

olr.tesseract.segment.region.crop.polygons=Crop polygons
olr.tesseract.segment.region.crop.polygons.description=annotate polygon coordinates instead of bounding box rectangles

olr.tesseract.segment.region.find.tables=Find tables
olr.tesseract.segment.region.find.tables.description=recognise tables as table regions (textord_tabfind_find_tables)

olr.tesseract.segment.region.find.staves=Find staves
olr.tesseract.segment.region.find.staves.description=when detecting regions, recognize music staves as non-text, suppressing it in the binary image (Tesseract's 'pageseg_apply_music_mask'); note that this might wrongly detect tables as staves

olr.tesseract.segment.region.sparse.text=Sparse text
olr.tesseract.segment.region.sparse.text.description=use 'sparse text' page segmentation mode (find as much text as possible in no particular order): only text regions, single lines without vertical or horizontal space

#
# SPI olr: tesserocr segment line
#
olr.tesseract.segment.line.name=Tesserocr segment line
olr.tesseract.segment.line.description=Segment page into lines with Tesseract - requires Docker

olr.tesseract.segment.line.dpi=DPI
olr.tesseract.segment.line.dpi.description=pixel density in dots per inch (overrides any meta-data in the images); disabled when negative; when disabled and no meta-data is found, 300 is assumed

olr.tesseract.segment.line.overwrite.lines=Overwrite lines
olr.tesseract.segment.line.overwrite.lines.description=remove existing layout and text annotation below the TextRegion level (otherwise skip region; no incremental annotation yet)

olr.tesseract.segment.line.padding=Padding
olr.tesseract.segment.line.padding.description=extend detected line rectangles by this many (true) pixels

olr.tesseract.segment.line.shrink.polygons=Shrink polygons
olr.tesseract.segment.line.shrink.polygons.description=annotate polygon coordinates instead of bounding box rectangles by projecting the convex hull of all symbols

#
# SPI ocr: Calamari
#
ocr.calamari.name=Calamari
ocr.calamari.description=Recognize lines with Calamari - requires Docker

ocr.calamari.no.models.available=There are no models available in the ocr-d opt directory ''{0}''.

ocr.calamari.model=Model
ocr.calamari.model.description=the calamari model files (*.ckpt.json); uses all checkpoints in that directory
ocr.calamari.model.empty=empty

ocr.calamari.voter=Voter
ocr.calamari.voter.description=the voting algorithm to use

ocr.calamari.level.text.equivalence=Level of text equivalence
ocr.calamari.level.text.equivalence.description=Deepest PAGE XML hierarchy level to include TextEquiv results
ocr.calamari.level.text.equivalence.line=line
ocr.calamari.level.text.equivalence.word=word
ocr.calamari.level.text.equivalence.glyph=glyph

ocr.calamari.glyph.confidence.cutoff=Glyph confidence cutoff
ocr.calamari.glyph.confidence.cutoff.description=only include glyph alternatives with confidences above this threshold

#
# SPI ocr: tesserocr recognize
#
ocr.tesseract.recognize.name=Tesserocr recognize
ocr.tesseract.recognize.description=Segment and/or recognize text with Tesseract (using annotated derived images, or masking and cropping images from coordinate polygons) on any level of the PAGE hierarchy - requires Docker

